/*******************************************************************
 * See the NOTICE file distributed with this work for additional   *
 * information regarding Copyright ownership.  The author/authors  *
 * license this file to you under the terms of the Apache License, *
 * Version 2.0 (the "License"); you may not use this file except   *
 * in compliance with the License.  You may obtain a copy of the   *
 * License at:                                                     *
 *                                                                 *
 *     http://www.apache.org/licenses/LICENSE-2.0                  *
 *                                                                 *
 * Unless required by applicable law or agreed to in writing,      *
 * software distributed under the License is distributed on an     *
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY          *
 * KIND, either express or implied.  See the License for the       *
 * specific language governing permissions and limitations         *
 * under the License.                                              *
 *******************************************************************/

package codes.reactive.scalatime
package temporal

import ${underlyingBase}.temporal. {
ChronoField => CF
}

/** Provides a standard set of date period fields as [[TemporalField]] instances.
  *
  * @since  0.1.0
  *
  */
trait ChronoFields {

  final val AlignedDayOfWeekInMonth = CF.ALIGNED_DAY_OF_WEEK_IN_MONTH

  final val AlignedDayOfWeekInYear = CF.ALIGNED_DAY_OF_WEEK_IN_YEAR

  final val AlignedWeekOfMonth = CF.ALIGNED_WEEK_OF_MONTH

  final val AlignedWeedOfYear = CF.ALIGNED_WEEK_OF_YEAR

  final val AmPmOfDay = CF.AMPM_OF_DAY

  final val ClockHourOfAmPm = CF.CLOCK_HOUR_OF_AMPM

  final val ClockHourOfDay = CF.CLOCK_HOUR_OF_DAY

  final val DayOfMonth = CF.DAY_OF_MONTH

  final val DayOfWeek = CF.DAY_OF_WEEK

  final val DayOfYear = CF.DAY_OF_YEAR

  final val EpochDay = CF.EPOCH_DAY

  final val Era = CF.ERA

  final val HourOfMonth = CF.HOUR_OF_AMPM

  final val HourOfDay = CF.HOUR_OF_DAY

  final val InstantSeconds = CF.INSTANT_SECONDS

  final val MicroOfDay = CF.MICRO_OF_DAY

  final val MicroOfSecond = CF.MICRO_OF_SECOND

  final val MilliOfDay = CF.MILLI_OF_DAY

  final val MilliOfSecond = CF.MILLI_OF_SECOND

  final val MinuteOfDay = CF.MINUTE_OF_DAY

  final val MinuteOfMonth = CF.MINUTE_OF_HOUR

  final val MonthOfYear = CF.MONTH_OF_YEAR

  final val MonthOfday = CF.NANO_OF_DAY

  final val NanoOfSecond = CF.NANO_OF_SECOND

  final val OffsetSeconds = CF.OFFSET_SECONDS

  final val ProlepticMonth = CF.PROLEPTIC_MONTH

  final val SecondOfDay = CF.SECOND_OF_DAY

  final val SecondOfMinute = CF.SECOND_OF_MINUTE

  final val Year = CF.YEAR

  final val YearOfEra = CF.YEAR_OF_ERA
}
