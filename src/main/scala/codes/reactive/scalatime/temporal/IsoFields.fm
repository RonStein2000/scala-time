/*******************************************************************
 * See the NOTICE file distributed with this work for additional   *
 * information regarding Copyright ownership.  The author/authors  *
 * license this file to you under the terms of the Apache License, *
 * Version 2.0 (the "License"); you may not use this file except   *
 * in compliance with the License.  You may obtain a copy of the   *
 * License at:                                                     *
 *                                                                 *
 *     http://www.apache.org/licenses/LICENSE-2.0                  *
 *                                                                 *
 * Unless required by applicable law or agreed to in writing,      *
 * software distributed under the License is distributed on an     *
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY          *
 * KIND, either express or implied.  See the License for the       *
 * specific language governing permissions and limitations         *
 * under the License.                                              *
 *******************************************************************/

package codes.reactive.scalatime
package temporal

import ${tPac}.temporal.{IsoFields => IF}

/** Provides fields specific to the ISO-8601 calendar system as [[TemporalField]] instances.
  *
  * @define Field   [[TemporalField]] representing the
  */
trait IsoFields {

  /** $Field day-of-quarter.
    * @see  [[http://${tDoc}/temporal/IsoFields.html#DAY_OF_QUARTER DAY_OF_QUARTER]]
    */
  final val DayOfQuarter = IF.DAY_OF_QUARTER

  /** $Field quarter-of-year.
    * @see  [[http://${tDoc}/temporal/IsoFields.html#QUARTER_OF_YEAR QUARTER_OF_YEAR]]
    */
  final val QuarterOfYear = IF.QUARTER_OF_YEAR

  /** $Field week-based-year.
    * @see  [[http://${tDoc}/temporal/IsoFields.html#WEEK_BASED_YEAR WEEK_BASED_YEAR]]
    */
  final val WeekBasedYear = IF.WEEK_BASED_YEAR

  /** $Field week-of-week-based-year.
    * @see  [[http://${tDoc}/temporal/IsoFields.html#WEEK_OF_WEEK_BASED_YEAR WEEK_OF_WEEK_BASED_YEAR]]
    */
  final val WeekOfWeekBasedYear = IF.WEEK_OF_WEEK_BASED_YEAR

}
